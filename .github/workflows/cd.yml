name: Deploy to EC2 from Docker Hub

on:
  push:
    branches:
      - dev

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Backend image
        run: |
          docker build -f server/Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/server:latest server/
          docker push ${{ secrets.DOCKER_USERNAME }}/server:latest

      - name: Build and push Frontend image
        run: |
          docker build -f client/Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/client:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/client:latest

  deploy-backend:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: SSH into EC2 Backend and Deploy
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_BACKEND_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_BACKENDKEY }}
          script: |
            if ! command -v docker &> /dev/null; then
              sudo apt update
              sudo apt install -y docker.io
              sudo systemctl enable --now docker
            fi

            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/server:latest
            sudo docker stop server || true
            sudo docker rm server || true
            sudo docker run -d \
              --name server \
              -p 4800:4800 \
              ${{ secrets.DOCKER_USERNAME }}/server:latest

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: SSH into EC2 Frontend and Deploy
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_FRONTEND_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_FRONTENDKEY }}
          script: |
            if ! command -v docker &> /dev/null; then
              sudo apt update
              sudo apt install -y docker.io
              sudo systemctl enable --now docker
            fi

            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/client:latest
            sudo docker stop client || true
            sudo docker rm client || true
            sudo docker run -d \
              --name client \
              -p 80:80 \
              ${{ secrets.DOCKER_USERNAME }}/client:latest